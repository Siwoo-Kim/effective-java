package com.siwoo.effectivejava.item85;

import java.io.*;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import static org.springframework.util.SerializationUtils.serialize;

public class Serialize {

    //basic serialization break encapsulation.
    private static class Panel implements Serializable {
        //Serialize number is auto generated by system.(SHA-1)
        private static final long serialVersionUID = 123456123456L;
        private List<Title> titles;

        private static class Title implements Serializable {
            private final String name;
            private final String content;

            public Title(String name, String content) {
                this.name = name;
                this.content = content;
            }

            @Override
            public String toString() {
                return "Title{" +
                        "name='" + name + '\'' +
                        ", content='" + content + '\'' +
                        '}';
            }
        }

        private int titleSize() {
            return titles.size();
        }

        @Override
        public String toString() {
            return "Panel{" +
                    "titles=" + titles +
                    '}';
        }
    }

    public static void main(String[] args) throws IOException, ClassNotFoundException {
        Panel panel = new Panel();
        panel.titles = Arrays.asList(
                new Panel.Title("name1", "content1"),
                new Panel.Title("name2", "content2"),
                new Panel.Title("name3", "content3"),
                new Panel.Title("name4", "content4")
        );
            try(ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(new File(Paths.get(".test-serialize.txt").toString())))) {
            out.writeObject(panel);
        }
        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(Paths.get(".test-serialize.txt").toFile()))) {
            panel = (Panel) in.readObject();
            System.out.println(panel);
        }
    }

    static byte[] bomb() {
        Set<Object> root = new HashSet<>();
        Set<Object> s1 = root;
        Set<Object> s2 = new HashSet<>();
        for (int i=0; i<100; i++) {
            Set<Object> t1 = new HashSet<>();
            Set<Object> t2 = new HashSet<>();
            t1.add("foo");
            s1.add(t1); s1.add(t2);
            s2.add(t1); s2.add(t2);
            s1 = t1;
            s2 = t2;
        }
        return serialize(root);
    }
}
